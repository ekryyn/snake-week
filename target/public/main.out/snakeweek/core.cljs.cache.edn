{:rename-macros {}, :renames {}, :externs {window {innerWidth {}, innerHeight {}}, Error {}}, :use-macros {}, :excludes #{}, :name snakeweek.core, :imports nil, :requires {p play-cljs.core, cljs.core.async cljs.core.async, assets snakeweek.assets, events goog.events, snakeweek.drawing snakeweek.drawing, maps snakeweek.maps, snakeweek.assets snakeweek.assets, goog.events goog.events, play-cljs.core play-cljs.core, snakeweek.maps snakeweek.maps, d snakeweek.drawing}, :cljs.spec/speced-vars [], :uses {take! cljs.core.async}, :defs {main-screen {:name snakeweek.core/main-screen, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 160, :column 1, :end-line 160, :end-column 17, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 160, :column 6, :end-line 160, :end-column 17}, :tag snakeweek.core/t_snakeweek$core14291}, t_snakeweek$core14311 {:num-fields 2, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/t_snakeweek$core14311, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :type true, :anonymous true, :column 5, :line 268, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, on-key-down {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 152, :column 7, :end-line 152, :end-column 18, :arglists (quote ([state key-code]))}, :name snakeweek.core/on-key-down, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 18, :method-params ([state key-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state key-code]))}, menu-screen-atom {:name snakeweek.core/menu-screen-atom, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 14, :column 1, :end-line 14, :end-column 26, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 14, :column 10, :end-line 14, :end-column 26}, :tag any}, move-snake {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 88, :column 7, :end-line 88, :end-column 17, :arglists (quote ([{:keys [snake dir last-move current-time speed], :as state}]))}, :name snakeweek.core/move-snake, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 17, :method-params ([p__14278]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [snake dir last-move current-time speed], :as state}]))}, get-age {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 59, :column 7, :end-line 59, :end-column 14, :arglists (quote ([[_ _ birth] current-time]))}, :name snakeweek.core/get-age, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 14, :method-params ([p__14265 current-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[_ _ birth] current-time]))}, menu-action {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 258, :column 11, :end-line 258, :end-column 22, :arglists (quote ([keycode]))}, :name snakeweek.core/menu-action, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 22, :method-params ([keycode]), :protocol-impl nil, :arglists-meta (nil nil), :column 5, :line 258, :end-line 258, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keycode]))}, init-state! {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 129, :column 7, :end-line 129, :end-column 18, :arglists (quote ([level]))}, :name snakeweek.core/init-state!, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 18, :method-params ([level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 1, :fn-var true, :arglists (quote ([level]))}, ->t_snakeweek$core14291 {:protocol-inline nil, :meta {:anonymous true, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta14292])), :file nil}, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/->t_snakeweek$core14291, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :method-params ([meta14292]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 161, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta14292])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, die {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 47, :column 7, :end-line 47, :end-column 10, :arglists (quote ([{:keys [snake walls], :as state}]))}, :name snakeweek.core/die, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 10, :method-params ([p__14259]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [snake walls], :as state}]))}, ->t_snakeweek$core14302 {:protocol-inline nil, :meta {:anonymous true, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta14303])), :file nil}, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/->t_snakeweek$core14302, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :method-params ([meta14303]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 229, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta14303])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_snakeweek$core14305 {:num-fields 1, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/t_snakeweek$core14305, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :type true, :anonymous true, :column 3, :line 243, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, pressed-keys {:name snakeweek.core/pressed-keys, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 13, :column 1, :end-line 13, :end-column 22, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 13, :column 10, :end-line 13, :end-column 22}, :tag any}, update-head {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 33, :column 9, :end-line 33, :end-column 20, :arglists (quote ([[x y from to]]))}, :name snakeweek.core/update-head, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 20, :method-params ([p__14244]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y from to]]))}, t_snakeweek$core14299 {:num-fields 1, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/t_snakeweek$core14299, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :type true, :anonymous true, :column 3, :line 209, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, game {:name snakeweek.core/game, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 11, :column 1, :end-line 11, :end-column 14, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 11, :column 10, :end-line 11, :end-column 14}, :tag any}, spawn-food {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 62, :column 7, :end-line 62, :end-column 17, :arglists (quote ([{:keys [width height current-time snake walls], :as state}]))}, :name snakeweek.core/spawn-food, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 17, :method-params ([p__14271]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [width height current-time snake walls], :as state}]))}, t_snakeweek$core14291 {:num-fields 1, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/t_snakeweek$core14291, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :type true, :anonymous true, :column 3, :line 161, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, maps-screen {:name snakeweek.core/maps-screen, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 242, :column 1, :end-line 242, :end-column 17, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 242, :column 6, :end-line 242, :end-column 17}, :tag snakeweek.core/t_snakeweek$core14305}, ->t_snakeweek$core14311 {:protocol-inline nil, :meta {:anonymous true, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([active-id meta14312])), :file nil}, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/->t_snakeweek$core14311, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :method-params ([active-id meta14312]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :line 268, :max-fixed-arity 2, :fn-var true, :arglists (quote ([active-id meta14312])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, credits-screen {:name snakeweek.core/credits-screen, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 208, :column 1, :end-line 208, :end-column 20, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 208, :column 6, :end-line 208, :end-column 20}, :tag snakeweek.core/t_snakeweek$core14299}, t_snakeweek$core14302 {:num-fields 1, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/t_snakeweek$core14302, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :type true, :anonymous true, :column 3, :line 229, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, get-score {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 73, :column 7, :end-line 73, :end-column 16, :arglists (quote ([age]))}, :name snakeweek.core/get-score, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 16, :method-params ([age]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 1, :fn-var true, :arglists (quote ([age]))}, new-head {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 36, :column 9, :end-line 36, :end-column 17, :arglists (quote ([[x y prev-from prev-to]]))}, :name snakeweek.core/new-head, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 17, :method-params ([p__14248]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y prev-from prev-to]]))}, loading-screen {:name snakeweek.core/loading-screen, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 228, :column 1, :end-line 228, :end-column 20, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 228, :column 6, :end-line 228, :end-column 20}, :tag snakeweek.core/t_snakeweek$core14302}, state {:name snakeweek.core/state, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 12, :column 1, :end-line 12, :end-column 15, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 12, :column 10, :end-line 12, :end-column 15}, :tag any}, adjust {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 22, :column 9, :end-line 22, :end-column 15, :arglists (quote ([[x y from to]]))}, :name snakeweek.core/adjust, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 15, :method-params ([p__14240]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[x y from to]]))}, new-game! {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 145, :column 7, :end-line 145, :end-column 16, :arglists (quote ([level]))}, :name snakeweek.core/new-game!, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 16, :method-params ([level]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([level]))}, update-food {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 113, :column 7, :end-line 113, :end-column 18, :arglists (quote ([{:keys [food current-time width height], :as state} ttl]))}, :name snakeweek.core/update-food, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 18, :method-params ([p__14282 ttl]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 113, :end-line 113, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [food current-time width height], :as state} ttl]))}, ->t_snakeweek$core14299 {:protocol-inline nil, :meta {:anonymous true, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta14300])), :file nil}, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/->t_snakeweek$core14299, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :method-params ([meta14300]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta14300])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, on-key-up {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 157, :column 7, :end-line 157, :end-column 16, :arglists (quote ([state key-code]))}, :name snakeweek.core/on-key-up, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 16, :method-params ([state key-code]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state key-code]))}, grow {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 54, :column 7, :end-line 54, :end-column 11, :arglists (quote ([snake]))}, :name snakeweek.core/grow, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 11, :method-params ([snake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([snake]))}, levels {:name snakeweek.core/levels, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 15, :column 1, :end-line 15, :end-column 16, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 15, :column 10, :end-line 15, :end-column 16}, :tag any}, ->t_snakeweek$core14305 {:protocol-inline nil, :meta {:anonymous true, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([meta14306])), :file nil}, :protocols #{play-cljs.core/Screen cljs.core/IMeta cljs.core/IWithMeta}, :name snakeweek.core/->t_snakeweek$core14305, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :method-params ([meta14306]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([meta14306])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, update-snake {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 21, :column 7, :end-line 21, :end-column 19, :arglists (quote ([{:keys [snake dir level]}]))}, :name snakeweek.core/update-snake, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 19, :method-params ([p__14237]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [snake dir level]}]))}, eat-food {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 76, :column 7, :end-line 76, :end-column 15, :arglists (quote ([{:keys [snake head food current-time width height], :as state}]))}, :name snakeweek.core/eat-food, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 15, :method-params ([p__14275]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [snake head food current-time width height], :as state}]))}, handle-input {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 100, :column 7, :end-line 100, :end-column 19, :arglists (quote ([state]))}, :name snakeweek.core/handle-input, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 19, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, menu-screen {:name snakeweek.core/menu-screen, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 256, :column 1, :end-line 256, :end-column 17, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 256, :column 6, :end-line 256, :end-column 17}, :tag snakeweek.core/t_snakeweek$core14311}, coords= {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 18, :column 7, :end-line 18, :end-column 14, :arglists (quote ([[x y] [fx fy]]))}, :name snakeweek.core/coords=, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 14, :method-params ([p__14229 p__14230]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[x y] [fx fy]]))}, update-game {:protocol-inline nil, :meta {:file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :line 120, :column 7, :end-line 120, :end-column 18, :arglists (quote ([{:keys [dead paused], :as state} delta]))}, :name snakeweek.core/update-game, :variadic false, :file "/home/freddy/.boot/cache/tmp/home/freddy/Dev/clojure/snakeweek/61u/r3nb31/snakeweek/core.cljs", :end-column 18, :method-params ([p__14288 delta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 120, :end-line 120, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [dead paused], :as state} delta]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:y meta14312 :paused :current-time :last-move :color :dir :dead :west :south :snake :else :speed active-id meta14306 :name :fill :value :width meta14292 :east :walls :size :center :level :div :head :food :score :no-smooth :image meta14303 :x meta14300 :rect :north :last-spawn :height :halign :text}, :order [:snake :dir :level :width :height :else :walls :dead :current-time :food :last-spawn :head :speed :score :last-move :east :west :south :north :paused :rect :x :y :no-smooth meta14292 meta14300 :div :fill :color :text :value :size :halign :center meta14303 meta14306 :image :name active-id meta14312]}, :doc nil}